geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed") +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "bottom", legend.text = element_text(size = 15)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split)) +
geom_point() +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed") +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split)) +
geom_point(size = 25) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed") +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split)) +
geom_point(size = 12) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed") +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed") +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=18) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
set.seed(12)
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=f_Y)) +
geom_point(color="blue",size=8) +
geom_smooth(method = "lm", color = "blue", linetype ="dashed",fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size =25)) +
ylab("f(Y)")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggsave("example_highleverage_1.pdf")
ggplot(df,aes(x=X,y=f_Y)) +
geom_point(color="blue",size=8) +
geom_smooth(method = "lm", color = "blue", linetype ="dashed",fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size =25)) +
ylab("f(Y)")
ggsave("example_highleverage_2.pdf")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 25),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggsave("example_highleverage_3.pdf")
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggsave("example_highleverage_1.pdf")
ggplot(df,aes(x=X,y=f_Y)) +
geom_point(color="blue",size=8) +
geom_smooth(method = "lm", color = "blue", linetype ="dashed",fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size =25)) +
ylab("f(Y)")
ggsave("example_highleverage_2.pdf")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggsave("example_highleverage_3.pdf")
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank()
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
set.seed(12)
X1 = c(0.3,0.7,1,1.4,1.5,2.1,2.3)
X2 = 6
Y1 = 1.5 + rnorm(length(X1),mean=0,sd=1)
Y2 = X2*2 + rnorm(1)
X = c(X1,X2)
Y = c(Y1,Y2)
Z = rnorm(length(X),mean=0,sd=1)
g_Y = Y+ Z
f_Y = Y -Z
df <- data.frame(X = X, Y = Y, f_Y= f_Y, g_Y= g_Y, split = c(rep("Split 1",4),rep("Split 2",4)))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggplot(df,aes(x=X,y=f_Y)) +
geom_point(color="blue",size=8) +
geom_smooth(method = "lm", color = "blue", linetype ="dashed",fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size =25)) +
ylab("f(Y)")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggsave("example_highleverage_1.pdf")
ggplot(df,aes(x=X,y=f_Y)) +
geom_point(color="blue",size=8) +
geom_smooth(method = "lm", color = "blue", linetype ="dashed",fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size =25)) +
ylab("f(Y)")
ggsave("example_highleverage_2.pdf")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=1.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggsave("example_highleverage_3.pdf")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=2) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=2.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggplot(df,aes(x=X,y=Y,color=split,shape=split)) +
geom_point(size = 8) +
geom_smooth(method = "lm", fill = NA,fullrange=TRUE,linetype="dashed",size=2.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 25)) +
scale_y_continuous(limits = c(0,15))
ggsave("example_highleverage_1.pdf")
ggplot(df,aes(x=X,y=f_Y)) +
geom_point(color="blue",size=8) +
geom_smooth(method = "lm", color = "blue", linetype ="dashed",fill = NA,fullrange=TRUE,size=2.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size =25)) +
ylab("f(Y)")
ggsave("example_highleverage_2.pdf")
ggplot(df,aes(x=X,y=g_Y)) +
geom_point(color="darkgreen",size=8) +
geom_smooth(method = "lm", color= "darkgreen", linetype="dashed", fill = NA,fullrange=TRUE,size=2.5) +
theme(legend.title = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
text = element_text(size = 40),
legend.position = "bottom", legend.text = element_text(size = 15)) +
ylab("g(Y)")
ggsave("example_highleverage_3.pdf")
setwd("~/Projects/Data-Fission.git/trunk")
setwd("~/Projects/Data-Fission.git/trunk")
suppressPackageStartupMessages({
library(glmnet)
library(clubSandwich)
library(sandwich)
library(MASS)
library(rootSolve)
library(genlasso)
library(splines)
library(cplm)
library(quantreg)
library(parallel)
library(ggplot2)
library(dplyr)
library(magrittr)
library(tidyr)
library(rlang)
library(purrr)
library(parallel)
library(zoo)
})
source("regression.R")
source("sim_dat_regression.R")
#######################################################################################################################
# Linear Regression Experiments
#######################################################################################################################
scale_seq = seq(0, 0.2, length.out = 5)
p = 100
result = list()
for (scale in scale_seq) {
print(scale)
para_vary = list(list(name = "scale", value = scale),
list(name = "R", value = 500),
list(name = "p", value = p),
list(name = "beta",
value = c(1, 0, rep(1,20), rep(0, p - 31), rep(-1,9))
# value = c(1, 0, rep(1,5), rep(0, p - 10), rep(2,3))
# value = rep(c(1, 0, 0, 0, 0, 1, 0, 0, 0, 0), 10))
))
result[[as.character(scale)]] = experiment_linear(para_vary)
}
save(result, file=paste("results/regression_linear_independent.Rdata",sep = ""))
scale_seq = seq(0, 0.2, length.out = 5)
p = 100
result = list()
for (scale in scale_seq) {
print(scale)
para_vary = list(list(name = "scale", value = scale),
list(name = "R", value = 5),
list(name = "p", value = p),
list(name = "beta",
value = c(1, 0, rep(1,20), rep(0, p - 31), rep(-1,9))
# value = c(1, 0, rep(1,5), rep(0, p - 10), rep(2,3))
# value = rep(c(1, 0, 0, 0, 0, 1, 0, 0, 0, 0), 10))
))
result[[as.character(scale)]] = experiment_linear(para_vary)
}
save(result, file=paste("results/regression_linear_independent.Rdata",sep = ""))
save(result, file=paste("results/regression_poisson_influential.Rdata",sep = ""))
install.packages("remotes")
install.packages("remotes")
remotes::install_github("capolitsch/trendfiltering")
source("regression_code/set_up_regression.R")
quasar <- readRDS("trendfiltering-astro-data/fig3top_quasar_spectrum.rds")
galaxy<- readRDS("trendfiltering-astro-data/fig3middle_galaxy_spectrum.rds")
stellar <- readRDS("trendfiltering-astro-data/fig3bottom_stellar_spectrum.rds")
quasar <- quasar[quasar$wavelength <= 5500 ,]
quasar <- quasar[quasar$wavelength >= 4000 ,]
galaxy <- galaxy[galaxy$wavelength <= 5500 ,]
galaxy <- galaxy[galaxy$wavelength >= 4000 ,]
stellar <- stellar[stellar$wavelength <= 5500 ,]
stellar <- stellar[stellar$wavelength >= 4000 ,]
source("regression_code/set_up_regression.R")
quasar <- readRDS("trendfiltering-astro-data/fig3top_quasar_spectrum.rds")
galaxy<- readRDS("trendfiltering-astro-data/fig3middle_galaxy_spectrum.rds")
stellar <- readRDS("trendfiltering-astro-data/fig3bottom_stellar_spectrum.rds")
quasar <- quasar[quasar$wavelength <= 5500 ,]
quasar <- quasar[quasar$wavelength >= 4000 ,]
galaxy <- galaxy[galaxy$wavelength <= 5500 ,]
galaxy <- galaxy[galaxy$wavelength >= 4000 ,]
stellar <- stellar[stellar$wavelength <= 5500 ,]
stellar <- stellar[stellar$wavelength >= 4000 ,]
compute_tf <- function(X,Y,std,type="SURE",onesd_rule=1,deg=1,alpha=0.1){
n=length(Y)
noise = rnorm(n, sd = std)
g_Y = Y + noise
h_Y = Y - noise
if(type=="SURE"){
tf = sure_trendfilter(X,g_Y, weights =1/std,k=deg)
lambda_min = tf$lambda_min
lambda_1se= tf$lambda_1se
} else{
tf = cv_trendfilter(X,g_Y, weights =1/std,k=deg)
lambda_min = tf$lambda_min[3]
lambda_1se= tf$lambda_1se[3]
}
if(onesd_rule) {
fit_y = tf$fitted_values[,which(tf$lambda == lambda_1se)]
}else{
fit_y = tf$fitted_values[,which(tf$lambda == lambda_min)]
}
knots = find_knots(fit_y,X,k=deg)
k= length(knots)+deg
basis = tp(1:n, knots = knots, degree=deg,k=k)
bs_X = cbind(rep(1, n), basis$X, basis$Z)
n_x = ncol(bs_X)
P_CI = predict(lm(h_Y ~ bs_X), interval="confidence", se.fit = TRUE, weights=1/std,level = 1 - alpha)
U_CI = unif_CI(n = n, knots = knots, Y = h_Y, X = 1:n, alpha = alpha,degree=deg)$predicted[,2:3]
df <- data.frame(cbind(X,Y,P_CI$fit,U_CI))
colnames(df) <- c("Position","Actual","Predicted","CI_Low","CI_High","UCI_Low","UCI_High")
return(df)
}
quasar_fit = compute_tf(quasar$wavelength,quasar$flux,quasar$flux_std_err,deg=1)
galaxy_fit = compute_tf(galaxy$wavelength,galaxy$flux,galaxy$flux_std_err,deg=2)
stellar_fit = compute_tf(stellar$wavelength,stellar$flux,stellar$flux_std_err,deg=2,type="CV")
quasar_linear_detailed = ggplot(quasar_fit,aes(Position,Actual,linetype="Actual")) +geom_line() +
geom_line(aes(Position,Predicted,linetype="Fitted"),size=1.2)+
geom_line(aes(Position,UCI_Low),color="orange",linetype="longdash",size=1.2) +
geom_line(aes(Position,CI_Low),color="blue",linetype="twodash",size=1.2) +
geom_line(aes(Position,CI_High,color="Pointwise CI"),linetype="twodash",size=1.2)+
geom_line(aes(Position,UCI_High,color="Uniform CI"),linetype="longdash",size=1.2) +
theme(
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5,size=20),
text = element_text(size = 15),
legend.position="none"
) +
xlab(TeX("$\\lambda(Å) $"))+
ylab(TeX("$f(\\lambda) ( 10^{-7} ergs/s/cm^{2}/Å ) $"))+
ggtitle(parse(text= paste("Quasar ( ~", expression(z %~~% 2.4),")",sep=""))) +
scale_color_manual(NULL,values = c('blue','orange'))+
scale_linetype_manual(NULL,values = c('solid','dashed'))+
facet_zoom(xlim = c(4700, 4800),ylim=c(1,15),zoom.size=0.5,show.area=TRUE,horizontal=TRUE,split=FALSE)
quasar_linear_detailed
galaxy_quadratic_detailed = ggplot(galaxy_fit,aes(Position,Actual,linetype="Actual")) +geom_line() +
geom_line(aes(Position,Predicted,linetype="Fitted"),size=1.2)+
geom_line(aes(Position,UCI_Low),color="orange",linetype="longdash",size=1.2) +
geom_line(aes(Position,CI_Low),color="blue",linetype="twodash",size=1.2) +
geom_line(aes(Position,CI_High,color="Pointwise CI"),linetype="twodash",size=1.2)+
geom_line(aes(Position,UCI_High,color="Uniform CI"),linetype="longdash",size=1.2) +
theme(
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
plot.title = element_text(hjust = 0.5,size=20),
text = element_text(size = 15),
legend.position="none"
) +
xlab(TeX("$\\lambda (Å)"))+
ylab(TeX("$f(\\lambda) ( 10^{-7} ergs/s/cm^{2}/Å ) $"))+
ggtitle(parse(text= paste("Galaxy ( ~", expression(z %~~% 2.4),")",sep=""))) +
scale_color_manual(NULL,values = c('blue','orange'))+
scale_linetype_manual(NULL,values = c('solid','dashed'))+
facet_zoom(xlim = c(4700, 4800),ylim=c(5,9),zoom.size=0.5,show.area=TRUE,horizontal=TRUE,split=FALSE)
galaxy_quadratic_detailed
