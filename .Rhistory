}
model = "regression_linear_influential6"
p=20
load(file = paste(wd, model,".Rdata", sep = ""))
beta= c(1, rep(0,15),1,-1,1,0)
influ_seq = seq(2, 6, length.out = 5)
for(influ in influ_seq){
agg_masking <- cbind("masking",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"masking",beta)))))
agg_split <- cbind("split",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"split",beta)))))
agg_full <- cbind("full",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"full",beta)))))
colnames(agg_masking) <- c("type","scale","error_FCR","CI_length","FSR","power_sign","power_selected","precision_selected")
colnames(agg_split) <- colnames(agg_masking)
colnames(agg_full) <- colnames(agg_masking)
agg <- rbind(agg_masking,agg_split,agg_full)
if(influ ==influ_seq[1]){
res_agg = agg
}
else{
res_agg = rbind(res_agg,agg)
}
}
res_agg[res_agg$type == "masking",'type'] = "blur"
res_agg
model = "regression_linear_influential6"
p=20
load(file = paste(wd, model,".Rdata", sep = ""))
beta= c(1, rep(0,15),1,-1,1,0)
influ_seq = seq(2, 6, length.out = 5)
for(influ in influ_seq){
agg_masking <- cbind("masking",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"masking",beta)))))
agg_split <- cbind("split",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"split",beta)))))
agg_full <- cbind("full",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"full",beta)))))
colnames(agg_masking) <- c("type","scale","error_FCR","CI_length","FSR","power_sign","power_selected","precision_selected")
colnames(agg_split) <- colnames(agg_masking)
colnames(agg_full) <- colnames(agg_masking)
agg <- rbind(agg_masking,agg_split,agg_full)
if(influ ==influ_seq[1]){
res_agg = agg
}
else{
res_agg = rbind(res_agg,agg)
}
}
res_agg
res_agg[res_agg$type == "masking",'type']
res_agg[res_agg$type == "masking",'type'] = "blur"
res_agg$type
as.character(res_agg$type)
res_agg$type = as.character(res_agg$type)
res_agg[res_agg$type == "masking",'type'] = "blur"
# Figure 9
model = "regression_linear_influential6"
p=20
load(file = paste(wd, model,".Rdata", sep = ""))
beta= c(1, rep(0,15),1,-1,1,0)
influ_seq = seq(2, 6, length.out = 5)
for(influ in influ_seq){
agg_masking <- cbind("masking",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"masking",beta)))))
agg_split <- cbind("split",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"split",beta)))))
agg_full <- cbind("full",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"full",beta)))))
colnames(agg_masking) <- c("type","scale","error_FCR","CI_length","FSR","power_sign","power_selected","precision_selected")
colnames(agg_split) <- colnames(agg_masking)
colnames(agg_full) <- colnames(agg_masking)
agg <- rbind(agg_masking,agg_split,agg_full)
if(influ ==influ_seq[1]){
res_agg = agg
}
else{
res_agg = rbind(res_agg,agg)
}
}
res_agg$type = as.character(res_agg$type)
res_agg
warnings()
res_agg[res_agg$type == "masking",'type']
res_agg[res_agg$type == "masking",'type'] = "blur"
df = aggregate(res_agg$error_FCR ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","FCR")
FCR_plot <- df %>%
ggplot( aes(x=signal, y=FCR, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("FCR") +
geom_hline(yintercept=0.2)+
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
FCR_plot
df = aggregate(res_agg$CI_length ~ res_agg$scale + res_agg$type, FUN = median)
colnames(df) <-c("signal","type","CI Length")
CI_length_plot <- df %>%
ggplot( aes(x=signal, y=`CI Length`, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("CI Length (given nonzero selection)")
CI_length_plot
# Constant trend filtering (the 1d fused lasso)
set.seed(0)
n = 100
beta0 = rep(sample(1:10,5),each=n/5)
y = beta0 + rnorm(n,sd=0.8)
a = fusedlasso1d(y)
plot(a)
# Linear trend filtering
set.seed(0)
n = 100
beta0 = numeric(n)
beta0[1:20] = (0:19)*4/19+2
beta0[20:45] = (25:0)*3/25+3
beta0[45:80] = (0:35)*9/35+3
beta0[80:100] = (20:0)*4/20+8
y = beta0 + rnorm(n)
a = trendfilter(y,ord=1)
plot(a,df=c(2,3,4,10))
a
df
plot(a,df=c(10))
plot(a,df=c(3))
plot(a,df=c(10))
?trendfilter.plot
plot(a,df=c(10))
a
a$fit
plot(a,df=c(10,15))
plot(a,df=c(10))
plot(y)
plot(y,xlab="Time",ylab="s")
plot(y,xlab="Time")
a$fit[,4]
plot(y,xlab="Time")
lines(a$fit[,4])
plot(y,xlab="Time")
lines(a$fit[,10])
plot(y,xlab="Time")
lines(a$fit[,15])
plot(y,xlab="Time")
lines(a$fit[,30])
plot(y,xlab="Time",ylab="Trend filter estimate")
lines(a$fit[,30])
plot(y,xlab="Time",ylab="Trend filter estimate",main="Trend filtering example")
lines(a$fit[,30])
# Constant trend filtering (the 1d fused lasso)
set.seed(0)
n = 100
beta0 = rep(sample(1:10,5),each=n/5)
y = beta0 + rnorm(n,sd=0.8)
a = fusedlasso1d(y)
plot(a)
# Linear trend filtering
set.seed(0)
n = 100
beta0 = numeric(n)
beta0[1:20] = (0:19)*4/19+2
beta0[20:45] = (25:0)*3/25+3
beta0[45:80] = (0:35)*9/35+3
beta0[80:100] = (20:0)*4/20+8
y = beta0 + rnorm(n)
a = trendfilter(y,ord=1)
plot(a,df=c(10))
plot(y,xlab="Time",ylab="Trend filter estimate",main="Trend filtering example")
lines(a$fit[,30])
source("set_up_regression.R")
source('input_regression.R')
suppressPackageStartupMessages({
library(glmnet)
library(clubSandwich)
library(sandwich)
library(MASS)
library(rootSolve)
library(genlasso)
library(splines)
library(cplm)
library(quantreg)
library(parallel)
library(ggplot2)
library(reshape2)
library(ggforce)
})
wd = paste(getwd(),"/results/",sep="")
outdir = paste(getwd(),"/figures/",sep="")
################################################################################################################################
################################################################################################################################
# Section 4 Figures: Linear Regression
################################################################################################################################
################################################################################################################################
get_metrics_linear <- function(single_res,x,beta) {
if(is.character(single_res[[1]][1])){
error_FCR = NA
CI_length = NA
FSR = NA
power_sign = NA
power_selected = NA
precision_selected = NA
return(c(error_FCR,CI_length,FSR,power_sign,power_selected,precision_selected))
}
if (!is.na(single_res$selected[[x]][1])) {
error_FCR = mean((single_res$CIs[[x]][,1] > single_res$projected[[x]]) |  (single_res$CIs[[x]][,2] < single_res$projected[[x]]))
CI_length = mean(single_res$CIs[[x]][,2] - single_res$CIs[[x]][,1])
FSR <- mean((single_res$projected[[x]] > 0 & single_res$CIs[[x]][,2] < 0) | (single_res$projected[[x]] <0 & single_res$CIs[[x]][,1] > 0))
power_sign <-mean((single_res$projected[[x]] > 0 & single_res$CIs[[x]][,1] > 0) | (single_res$projected[[x]] <0 & single_res$CIs[[x]][,2] <0))
power_selected <- sum(abs(beta[single_res$selected[[x]]]) > 0) / (sum(abs(beta)>0))
precision_selected <- sum(abs(beta[single_res$selected[[x]]]) > 0) / length(single_res$selected[[x]])
}
else{
error_FCR = 0
CI_length = NA
FSR = NA
power_sign = NA
power_selected = 0
precision_selected = 0
}
return(c(error_FCR,CI_length,FSR,power_sign,power_selected,precision_selected))
}
# Figure 9
model = "regression_linear_influential6"
p=20
load(file = paste(wd, model,".Rdata", sep = ""))
beta= c(1, rep(0,15),1,-1,1,0)
influ_seq = seq(2, 6, length.out = 5)
for(influ in influ_seq){
agg_masking <- cbind("masking",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"masking",beta)))))
agg_split <- cbind("split",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"split",beta)))))
agg_full <- cbind("full",influ,data.frame(t(sapply(result[[as.character(influ)]], function(x) get_metrics_linear(x,"full",beta)))))
colnames(agg_masking) <- c("type","scale","error_FCR","CI_length","FSR","power_sign","power_selected","precision_selected")
colnames(agg_split) <- colnames(agg_masking)
colnames(agg_full) <- colnames(agg_masking)
agg <- rbind(agg_masking,agg_split,agg_full)
if(influ ==influ_seq[1]){
res_agg = agg
}
else{
res_agg = rbind(res_agg,agg)
}
}
res_agg$type = as.character(res_agg$type)
res_agg[res_agg$type == "masking",'type'] = "blur"
df = aggregate(res_agg$error_FCR ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","FCR")
FCR_plot <- df %>%
ggplot( aes(x=signal, y=FCR, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("FCR") +
geom_hline(yintercept=0.2)+
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
FCR_plot
?ggsave
ggsave("linear_influential_pres_FCR.pdf",plot=FCR_plot)
df = aggregate(res_agg$CI_length ~ res_agg$scale + res_agg$type, FUN = median)
colnames(df) <-c("signal","type","CI Length")
CI_length_plot <- df %>%
ggplot( aes(x=signal, y=`CI Length`, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("CI Length (given nonzero selection)")
df = aggregate(res_agg$FSR~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","FSR")
FSR_plot <- df %>%
ggplot( aes(x=signal, y=FSR, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("FSR") +
geom_hline(yintercept=0.2)+
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$power_sign ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","power_sign")
power_sign_plot <- df %>%
ggplot( aes(x=signal, y=power_sign, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Power Sign") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$power_selected ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","power_selected")
power_selected_plot <- df %>%
ggplot( aes(x=signal, y=power_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Power Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$precision_selected ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","precision_selected")
precision_selected_plot <- df %>%
ggplot( aes(x=signal, y=precision_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Precision Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
ggsave(paste(outdir, "regression_linear_influential_FCR.pdf",sep=""),FCR_plot)
ggsave(paste(outdir, "regression_linear_influential_CI_length.pdf",sep=""),CI_length_plot)
ggsave(paste(outdir, "regression_linear_influential_FSR.pdf",sep=""),FSR_plot)
ggsave(paste(outdir, "regression_linear_influential_power_sign.pdf",sep=""),power_sign_plot)
ggsave(paste(outdir, "regression_linear_influential_power_selected.pdf",sep=""),power_selected_plot)
ggsave(paste(outdir, "regression_linear_influential_precision_selected.pdf",sep=""),precision_selected_plot)
precision_selected_plot <- df %>%
ggplot( aes(x=signal, y=precision_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 15),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Precision Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
precision_selected_plot
precision_selected_plot <- df %>%
ggplot( aes(x=signal, y=precision_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 20),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Precision Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
precision_selected_plot
precision_selected_plot <- df %>%
ggplot( aes(x=signal, y=precision_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Precision Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
precision_selected_plot
df = aggregate(res_agg$error_FCR ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","FCR")
FCR_plot <- df %>%
ggplot( aes(x=signal, y=FCR, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("FCR") +
geom_hline(yintercept=0.2)+
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$CI_length ~ res_agg$scale + res_agg$type, FUN = median)
colnames(df) <-c("signal","type","CI Length")
CI_length_plot <- df %>%
ggplot( aes(x=signal, y=`CI Length`, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("CI Length (given nonzero selection)")
df = aggregate(res_agg$FSR~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","FSR")
FSR_plot <- df %>%
ggplot( aes(x=signal, y=FSR, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("FSR") +
geom_hline(yintercept=0.2)+
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$power_sign ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","power_sign")
power_sign_plot <- df %>%
ggplot( aes(x=signal, y=power_sign, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Power Sign") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$power_selected ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","power_selected")
power_selected_plot <- df %>%
ggplot( aes(x=signal, y=power_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Power Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
df = aggregate(res_agg$precision_selected ~ res_agg$scale + res_agg$type, FUN = mean)
colnames(df) <-c("signal","type","precision_selected")
precision_selected_plot <- df %>%
ggplot( aes(x=signal, y=precision_selected, group=type, color=type)) +
geom_line(aes(linetype = type, color = type), size = 1.5) +
geom_point(aes(shape = type, color = type), size = 3) +
theme(legend.title = element_blank(),
panel.background = element_rect(fill = "white", colour = "black"),
panel.grid.major = element_line(colour = "grey", linetype = "dotted"),
panel.grid.minor = element_line(colour = "grey"),
text = element_text(size = 25),
legend.position = "none", legend.text = element_text(size = 15)) +
xlab("Leverage Parameter") +
ylab("Precision Selected") +
scale_y_continuous(breaks = seq(0, 1, 0.2), limits = c(0,1))
ggsave(paste(outdir, "regression_linear_influential_FCR.pdf",sep=""),FCR_plot)
ggsave(paste(outdir, "regression_linear_influential_CI_length.pdf",sep=""),CI_length_plot)
ggsave(paste(outdir, "regression_linear_influential_FSR.pdf",sep=""),FSR_plot)
ggsave(paste(outdir, "regression_linear_influential_power_sign.pdf",sep=""),power_sign_plot)
ggsave(paste(outdir, "regression_linear_influential_power_selected.pdf",sep=""),power_selected_plot)
ggsave(paste(outdir, "regression_linear_influential_precision_selected.pdf",sep=""),precision_selected_plot)
ggsave(paste(outdir, "regression_linear_influential_FCR.pdf",sep=""),FCR_plot)
ggsave(paste(outdir, "regression_linear_influential_CI_length.pdf",sep=""),CI_length_plot)
ggsave(paste(outdir, "regression_linear_influential_FSR.pdf",sep=""),FSR_plot)
ggsave(paste(outdir, "regression_linear_influential_power_sign.pdf",sep=""),power_sign_plot)
ggsave(paste(outdir, "regression_linear_influential_power_selected.pdf",sep=""),power_selected_plot)
ggsave(paste(outdir, "regression_linear_influential_precision_selected.pdf",sep=""),precision_selected_plot)
ggsave(paste(outdir, "regression_linear_influential_FCR2.pdf",sep=""),FCR_plot)
ggsave(paste(outdir, "regression_linear_influential_CI_length2.pdf",sep=""),CI_length_plot)
ggsave(paste(outdir, "regression_linear_influential_FSR2.pdf",sep=""),FSR_plot)
ggsave(paste(outdir, "regression_linear_influential_power_sign2.pdf",sep=""),power_sign_plot)
ggsave(paste(outdir, "regression_linear_influential_power_selected2.pdf",sep=""),power_selected_plot)
ggsave(paste(outdir, "regression_linear_influential_precision_selected2.pdf",sep=""),precision_selected_plot)
FCR_plot
ggsave(paste(outdir, "regression_linear_influential_FCR2.pdf",sep=""),FCR_plot)
setwd("~/Documents/GitHub/Data-Fission")
library("MASS")
library("mgcv")
library("RCurl")
## AdaPT
source("STAR_code/AdaPT.R")
source("STAR_code/AdaPT_gam.R")
source('STAR_code/summarize_methods.R')
source("STAR_code/expr_func.R")
source('STAR_code/STAR_convex.R')
wd = paste(getwd(),"/results/",sep="")
